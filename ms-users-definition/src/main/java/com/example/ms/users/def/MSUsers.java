package com.example.ms.users.def;

import com.example.ms.users.def.ex.ExistingUserException;
import com.example.ms.users.def.ex.IncorrectPasswordException;
import com.example.ms.users.def.ex.IncorrectUsernameException;
import com.example.ms.users.def.ex.InvalidUserException;
import com.example.ms.users.def.model.User;

public interface MSUsers {
	/**
	 * Adds a user to the user repository.
	 * 
	 * @param user User to be added. Not null.
	 * @throws ExistingUserException When the user passed to this method already
	 *                               exists (username must be unique).
	 * @throws InvalidUserException  When the user passed to this method doesn't
	 *                               have either a username or a password.
	 */
	public void addUser(User user) throws ExistingUserException, InvalidUserException;

	/**
	 * Authenticates a user by using the username and password.
	 * 
	 * @param username
	 * @param password
	 * 
	 * @return Token that has 1 day expiration. Can be validated using
	 *         {@link #getUserByToken(String)}.
	 * 
	 * @throws IncorrectPasswordException When the user exists, but the password is
	 *                                    incorrect.
	 * @throws IncorrectUsernameException When the user doesn't exist.
	 */
	public String authenticateUser(String username, String password)
			throws IncorrectPasswordException, IncorrectUsernameException;

	/**
	 * Gets the user associated with the token provided. If the token has expired or
	 * is invalid, {@code null} will be returned.
	 * 
	 * @param token generated by {@link #authenticateUser(String, String)}.
	 * @return {@link User} associated with the token.
	 */
	public User getUserByToken(String token);
}
